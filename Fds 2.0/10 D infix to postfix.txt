#include <iostream>
#include <stack>
#include <string>
#include <cctype>
#include <cmath>
using namespace std;

int precedence(char op) {
    if (op == '+' || op == '-') {
        return 1;
    } else if (op == '*' || op == '/') {
        return 2;
    }
    return 0;
}

int applyOperation(int a, int b, char op) {
    if (op == '+') return a + b;
    if (op == '-') return a - b;
    if (op == '*') return a * b;
    if (op == '/') return a / b;
    return 0;
}

string infixToPostfix(string infix) {
    stack<char> operators;
    string postfix = "";
    
    for (char c : infix) {
        if (isalnum(c)) {
            postfix += c;
        } else if (c == '(') {
            operators.push(c);
        } else if (c == ')') {
            while (!operators.empty() && operators.top() != '(') {
                postfix += operators.top();
                operators.pop();
            }
            operators.pop(); // pop '('
        } else if (c == '+' || c == '-' || c == '*' || c == '/') {
            while (!operators.empty() && precedence(operators.top()) >= precedence(c)) {
                postfix += operators.top();
                operators.pop();
            }
            operators.push(c);
        }
    }
    
    while (!operators.empty()) {
        postfix += operators.top();
        operators.pop();
    }
    
    return postfix;
}

int evaluatePostfix(string postfix) {
    stack<int> values;
    
    for (char c : postfix) {
        if (isdigit(c)) {
            values.push(c - '0');
        } else {
            int b = values.top(); values.pop();
            int a = values.top(); values.pop();
            int result = applyOperation(a, b, c);
            values.push(result);
        }
    }
    
    return values.top();
}

int main() {
    string infix;
    
    cout << "Enter an infix expression: ";
    cin >> infix;
    
    string postfix = infixToPostfix(infix);
    cout << "Postfix Expression: " << postfix << endl;
    
    int result = evaluatePostfix(postfix);
    cout << "Evaluation of Postfix Expression: " << result << endl;
    
    return 0;
}
