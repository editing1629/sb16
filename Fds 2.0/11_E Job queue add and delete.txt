#include <iostream>
#include <queue>
#include <string>
using namespace std;

class JobQueue {
private:
    queue<string> jobQueue;

public:
    void addJob(const string& job) {
        jobQueue.push(job);
        cout << "Job '" << job << "' added to the queue." << endl;
    }

    void deleteJob() {
        if (jobQueue.empty()) {
            cout << "No jobs to delete. The queue is empty." << endl;
        } else {
            cout << "Job '" << jobQueue.front() << "' is being processed and removed from the queue." << endl;
            jobQueue.pop();
        }
    }

    void displayQueue() {
        if (jobQueue.empty()) {
            cout << "The queue is empty." << endl;
        } else {
            cout << "Jobs in the queue: ";
            queue<string> tempQueue = jobQueue; 
            while (!tempQueue.empty()) {
                cout << tempQueue.front() << " ";
                tempQueue.pop();
            }
            cout << endl;
        }
    }
};

int main() {
    JobQueue jobQueue;
    int choice;
    string job;

    while (true) {
        cout << "\nJob Queue Menu:\n";
        cout << "1. Add Job\n";
        cout << "2. Delete Job\n";
        cout << "3. Display Jobs in Queue\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        cin.ignore();  
        switch (choice) {
            case 1:
                cout << "Enter job name (use quotes for multi-word job names): ";
                getline(cin, job); 
                jobQueue.addJob(job);
                break;
            case 2:
                jobQueue.deleteJob();
                break;
            case 3:
                jobQueue.displayQueue();
                break;
            case 4:
                cout << "Exiting the program." << endl;
                return 0;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    }
}
